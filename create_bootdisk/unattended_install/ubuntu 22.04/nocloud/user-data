#cloud-config
# https://ubuntu.com/server/docs/install/autoinstall-reference
autoinstall:
  version: 1

  network:
    version: 2
    ethernets: {}

  # enable for testing if cloud-init fails
  #identity:
  #   realname: 'Ubuntu User'
  #   username: ubuntu
  #   password: '$6$wdAcoXrU039hKYPd$508Qvbe7ObUnxoj15DRCkzC3qO7edjH0VV7BPNRDYK4QR8ofJaEEF2heacn0QgD.f8pO8SNp83XNdWG6tocBM1'
    # hostname: ubuntu

  reporting:
    builtin:
      type: print

  apt:
    preserve_sources_list: false

  storage:
    config:
      # disks
      - id: disk0
        type: disk
        ptable: gpt
        wipe: superblock
        grub_device: true
        preserve: false
        path: /dev/sda
      # partitions
      - id: partition-0
        device: disk0
        size: 1G
        wipe: superblock
        flag: boot
        number: 1
        preserve: false
        grub_device: true
        type: partition
      - id: partition-1
        device: disk0
        size: 2G
        wipe: superblock
        flag: ''
        number: 2
        preserve: false
        type: partition
      - id: partition-lvm
        device: disk0
        size: -1
        wipe: superblock
        flag: ''
        number: 3
        preserve: false
        type: partition
      # LVM volume groups
      - id: lvm_volgroup-0
        name: lvm_vg-0
        devices:
        - partition-lvm
        preserve: false
        type: lvm_volgroup
      # lvm logical volumes
      - id: lvm_partition-0
        name: lvm_lv-var
        volgroup: lvm_volgroup-0
        size: 80%
        wipe: superblock
        preserve: false
        type: lvm_partition
      - id: lvm_partition-1
        name: lvm_lv-root
        volgroup: lvm_volgroup-0
        size: -1
        wipe: superblock
        preserve: false
        type: lvm_partition
      # standard partitions
      - id: format-efi
        fstype: fat32
        volume: partition-0
        preserve: false
        type: format
      - id: format-boot
        fstype: ext4
        volume: partition-1
        preserve: false
        type: format
      # logical volumes
      - id: format-var
        fstype: ext4
        volume: lvm_partition-0
        preserve: false
        type: format
      - id: format-root
        fstype: ext4
        volume: lvm_partition-1
        preserve: false
        type: format
      # mounts
      - id: mount-0
        path: /boot/efi
        device: format-efi
        type: mount
      - id: mount-1
        path: /boot
        device: format-boot
        type: mount
      - id: mount-2
        path: /var
        device: format-var
        type: mount
      - id: mount-3
        path: /
        device: format-root
        type: mount  

  ssh:
    allow-pw: true
    install-server: true

  early-commands:
    - echo 'deb [ trusted=yes ] file:///cdrom/local_repo ./' > /etc/apt/sources.list
    - apt update
    - apt -y install i2c-tools
    - /cdrom/ncubed/bin/led blink cyan .08 .03 &
    ###########################
    # install disk firmware
    ###########################
    - /bin/bash -c /cdrom/ncubed/FIRMWARE/Linux_DLMC2b_SFDN004E_20220315/install.sh
    ###########################
    # install firmware
    ###########################
    - cp /etc/lsb-release /etc/lsb-release.bck
    - sed -i 's/=20.04\|=22.04/=18.04/g' /etc/lsb-release
    - if [ $(cat /sys/class/dmi/id/bios_version) != 3.48.0.9-21 ]; then /bin/bash -c yes | /cdrom/ncubed/FIRMWARE/ufw_2.4/vep1400x_ufw_2.4; fi
    - cp /etc/lsb-release.bck /etc/lsb-release
    ###########################
    # end install firmware
    ###########################
    - pgrep -f '/bin/led' | sed '$ d' | xargs -r kill
    - /cdrom/ncubed/bin/led blue

  late-commands:
    - /cdrom/ncubed/bin/led orange
    - cp -r /cdrom/local_repo/ /target
    - echo 'deb [ trusted=yes ] file:///local_repo ./' > /target/etc/apt/sources.list
    - /cdrom/ncubed/bin/led cyan
    - curtin --showtrace -vvv system-install -t /target -- wireguard
    - curtin --showtrace -vvv system-install -t /target -- git
    - curtin --showtrace -vvv system-install -t /target -- qemu-system-x86
    - curtin --showtrace -vvv system-install -t /target -- libvirt-daemon
    - curtin --showtrace -vvv system-install -t /target -- libvirt-clients
    - curtin --showtrace -vvv system-install -t /target -- bridge-utils
    - curtin --showtrace -vvv system-install -t /target -- cockpit
    - curtin --showtrace -vvv system-install -t /target -- cockpit-machines
    - curtin --showtrace -vvv system-install -t /target -- i2c-tools
    - curtin --showtrace -vvv system-install -t /target -- snmpd
    - curtin --showtrace -vvv system-install -t /target -- debsums
    - curtin --showtrace -vvv system-install -t /target -- python3-libvirt
    - curtin --showtrace -vvv system-install -t /target -- dnsmasq-base
    - /cdrom/ncubed/bin/led blue
    - mkdir /target/opt/ncubed
    - cp -r /cdrom/ncubed /target/opt
    - /cdrom/ncubed/bin/led green
    - /cdrom/ncubed/bin/sync-images sdb2 /target/opt/ncubed
    - apt -y install efibootmgr
    - efibootmgr -n 0000
    - cp /target/etc/apt/sources.list.curtin.old /target/etc/apt/sources.list

  error-commands:
    - /cdrom/ncubed/bin/led red

  # cloud-init
  user-data:
    hostname: netcube01
    network:
      config: disabled
    timezone: Europe/Amsterdam
    locale: en_US.UTF-8
    keyboard:
      layout: us
    package_update: false
    package_upgrade: false
    ssh_pwauth: true
    users:
      - name: nc-admin
        shell: /bin/bash
        sudo: ALL=(ALL) NOPASSWD:ALL
        passwd: '$6$MIv5OJRmcCkinJ3G$lEA/I6GSObSKLpcRtZaaHq6HxApwkke4IdaMlMuWoRt8/iRrvkA3hU7sL0PeA7eLG6zCFfyMluh97LK3qNrMA.'
        lock_passwd: false
    runcmd:
      - /bin/bash $(ls -d /opt/ncubed/updates/* | tail -n1)/install.sh --skip_version_check 2>/dev/null